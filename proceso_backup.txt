bits 32
global proceso
extern	printf
segment .data
	array: dd 5, 2, 7, 4, 7, 3, 7, 0, 5, 100; 
	arrayLen: dd 10  
	aoutput: db "%d", 10, 0 ;

segment .text
proceso:
	push    ebp                      ; set up stack frame
    mov     ebp,esp

    mov ecx, [arrayLen]              ; loop counter set up
    mov esi, 0                       ; counter to increment set up for looping through array
	
	.loop:
	    push ecx                     ; make sure to put ecx (counter) on stack so we don't lose it when calling printf)
	    push dword [array + esi]     ; put the value of the array at this (esi) index on the stack to be used by printf
	    push dword aoutput           ; put the array output format on the stack for printf to use
	    call printf                  ; call the printf command
	    add esp, 8                   ; add 4 bytes * 2
	    pop ecx                      ; get ecx back
	    add esi, 4
	    mov eax, ecx
    loop .loop

    mov     esp, ebp    ; takedown stack frame
    pop     ebp         ; same as "leave" op

    mov     eax, 100     ; normal, no error, return value
    ret                 ; return

